name: Blueprint Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'blueprints/**/*.yml'
      - 'blueprints/**/*.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'blueprints/**/*.yml'
      - 'blueprints/**/*.yaml'
  workflow_dispatch:

jobs:
  yaml-validation:
    name: YAML Syntax Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml yamllint

      - name: Validate YAML syntax
        run: |
          find blueprints -name "*.yml" -o -name "*.yaml" | xargs yamllint -d relaxed

      - name: Check for valid YAML structure
        run: |
          python .github/scripts/validate_yaml_structure.py

  blueprint-schema-validation:
    name: Blueprint Schema Validation
    runs-on: ubuntu-latest
    needs: yaml-validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema voluptuous

      - name: Validate blueprint schema
        run: |
          python .github/scripts/validate_blueprint_schema.py

  home-assistant-validation:
    name: Home Assistant Configuration Check
    runs-on: ubuntu-latest
    needs: blueprint-schema-validation
    container:
      image: homeassistant/home-assistant:stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create test Home Assistant configuration
        run: |
          mkdir -p /config
          cp .github/configs/test_configuration.yaml /config/configuration.yaml
          cp -r blueprints /config/blueprints

      - name: Check Home Assistant configuration
        run: |
          python -m homeassistant --script check_config --config /config

  blueprint-import-test:
    name: Blueprint Import Test
    runs-on: ubuntu-latest
    needs: home-assistant-validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Home Assistant Core
        run: |
          python -m pip install --upgrade pip
          pip install homeassistant

      - name: Test blueprint imports
        run: |
          python .github/scripts/test_blueprint_imports.py

  documentation-sync:
    name: Documentation Sync Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Check documentation sync
        run: |
          python .github/scripts/check_docs_sync.py

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
